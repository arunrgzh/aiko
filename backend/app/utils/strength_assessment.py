# coding: utf-8
"""
Shared logic for strength assessment profiles and scoring
"""

STRENGTH_PROFILES = {
    "communicative_leader": {
        "name": "Коммуникативный лидер",
        "description": "Легко общается с людьми, ведет за собой, презентует идеи",
        "strengths": ["Общение с клиентами", "Презентации", "Работа в команде", "Лидерство"],
        "recommended_spheres": ["Продажи", "Консультирование", "Работа с клиентами", "PR"]
    },
    "organizer": {
        "name": "Организатор-планировщик", 
        "description": "Отлично планирует и организует рабочие процессы",
        "strengths": ["Планирование", "Контроль качества", "Администрирование", "Системность"],
        "recommended_spheres": ["Офисная работа", "Логистика", "Администрирование", "Проект-менеджмент"]
    },
    "technical_specialist": {
        "name": "Технический специалист",
        "description": "Хорошо работает с техникой and инструментами",
        "strengths": ["Работа с техникой", "Точность", "Практические навыки", "Аналитика"],
        "recommended_spheres": ["Производство", "Техническое обслуживание", "Ремесла", "IT-поддержка"]
    },
    "executor": {
        "name": "Исполнитель-профессионал",
        "description": "Ответственно и качественно выполняет поставленные задачи",
        "strengths": ["Ответственность", "Надежность", "Качественное выполнение", "Внимательность"],
        "recommended_spheres": ["Документооборот", "Качественное производство", "Архивное дело", "Бухгалтерия"]
    },
    "team_player": {
        "name": "Командный игрок",
        "description": "Эффективно работает в команде, поддерживает коллег",
        "strengths": ["Сотрудничество", "Эмпатия", "Поддержка", "Дипломатия"],
        "recommended_spheres": ["Социальные услуги", "Помощь людям", "Командная работа", "HR"]
    },
    "independent_worker": {
        "name": "Самостоятельный работник",
        "description": "Предпочитает индивидуальную глубокую работу",
        "strengths": ["Концентрация", "Независимость", "Глубокая проработка", "Творчество"],
        "recommended_spheres": ["Индивидуальные проекты", "Исследования", "Творчество", "Фриланс"]
    }
}

def calculate_profile_scores(answers):
    """
    Calculate profile scores based on user answers
    answers: list of answer indices (0-3 for each question)
    Returns: dict with profile scores
    """
    # Scoring matrix: [communicative, organizer, technical, executor, team_player, independent]
    scoring_matrix = [
        # Q1: Общение с новыми людьми
        [[3, 1, 0, 0, 2, 0], [1, 1, 1, 2, 2, 1], [0, 2, 1, 3, 1, 2], [0, 1, 2, 2, 1, 3]],
        # Q2: Объяснение сложного
        [[3, 1, 1, 1, 2, 1], [1, 2, 3, 2, 1, 1], [2, 1, 1, 2, 3, 1], [1, 3, 2, 3, 1, 2]],
        # Q3: Конфликтные ситуации
        [[2, 2, 1, 1, 3, 1], [1, 3, 1, 2, 2, 1], [0, 1, 1, 2, 1, 3], [3, 1, 2, 1, 1, 2]],
        # Q4: Рабочее место
        [[1, 3, 2, 3, 1, 1], [2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 2, 1], [0, 0, 1, 0, 1, 2]],
        # Q5: Выполнение задач  
        [[2, 3, 2, 2, 1, 2], [1, 2, 1, 3, 2, 1], [1, 1, 2, 2, 2, 1], [0, 1, 1, 3, 1, 2]],
        # Q6: Сроки
        [[2, 3, 2, 3, 1, 1], [2, 2, 2, 2, 2, 1], [1, 1, 1, 1, 2, 2], [1, 0, 2, 1, 1, 3]],
        # Q7: Техника
        [[1, 2, 3, 2, 1, 2], [1, 2, 2, 3, 1, 1], [1, 1, 1, 2, 2, 1], [0, 1, 2, 2, 1, 3]],
        # Q8: Повторяющиеся задачи
        [[1, 2, 2, 3, 1, 1], [2, 3, 3, 2, 1, 2], [2, 1, 1, 1, 2, 1], [1, 1, 1, 2, 1, 3]],
        # Q9: Работа руками
        [[1, 1, 3, 2, 1, 1], [1, 2, 3, 2, 1, 2], [1, 1, 2, 2, 2, 1], [2, 2, 0, 1, 1, 3]],
        # Q10: Коллектив
        [[3, 1, 1, 1, 3, 0], [1, 2, 2, 2, 2, 1], [2, 2, 1, 2, 3, 1], [1, 1, 2, 2, 1, 3]],
        # Q11: Новое задание
        [[2, 1, 2, 1, 1, 2], [2, 2, 1, 2, 2, 1], [1, 3, 2, 3, 1, 2], [1, 2, 1, 3, 2, 1]],
        # Q12: Изменения
        [[3, 2, 2, 1, 2, 2], [1, 2, 1, 2, 2, 2], [0, 1, 1, 2, 1, 3], [1, 1, 1, 2, 3, 1]],
        # Q13: Мотивация
        [[2, 1, 1, 2, 3, 1], [1, 2, 1, 3, 1, 2], [2, 2, 2, 2, 2, 1], [1, 1, 2, 1, 1, 3]],
        # Q14: Цель трудоустройства
        [[3, 1, 2, 1, 2, 2], [1, 2, 1, 3, 1, 2], [2, 1, 1, 2, 3, 1], [2, 2, 2, 2, 1, 3]],
        # Q15: Выбор работы
        [[2, 1, 2, 1, 2, 3], [1, 3, 1, 3, 1, 1], [1, 1, 1, 2, 3, 1], [2, 2, 2, 2, 1, 3]]
    ]
    
    profile_scores = [0, 0, 0, 0, 0, 0]  # [communicative, organizer, technical, executor, team_player, independent]
    
    for q_idx, answer_idx in enumerate(answers):
        if q_idx < len(scoring_matrix) and answer_idx < len(scoring_matrix[q_idx]):
            for p_idx in range(6):
                profile_scores[p_idx] += scoring_matrix[q_idx][answer_idx][p_idx]
    
    profile_names = ["communicative_leader", "organizer", "technical_specialist", "executor", "team_player", "independent_worker"]
    return dict(zip(profile_names, profile_scores)) 